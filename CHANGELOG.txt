2013-06-17 - 0.2.3 beta 4

    * Changes in default texture scaling - textures now render at quarter
      of their size (where it fit once before, it fits four times now)
    * Default texture scaling adjustable with a map var
    * Correct behavior of model bounding boxes when adjusting pitch/roll
    * The sauer attr system is not limited to 5 attributes anymore
    * Scripted vectors now use native __new constructors
    * OF no longer needs luajit with 5.2 features (proxy objects are used to
      work around the lack of __len on tables)
    * Pitch and roll for obstacles
    * Particles now support 24bit colors instead of just 16bit
    * Functional newent for manual use
    * From tesseract: triplanar texturing and decal shaders, cubescript
      optimizations and other improvements
    * Reorganized namespaces - they're always explicit now
    * Modules don't use globals anymore - instead you require() them where
      you need them
    * Removed _V (use the var module)
    * The _C interface to core API is now read only (via userdata - can never
      be modified from scripts)
    * Removed the CLIENT variable, check for client via "not SERVER"
    * Removed the library module - you can use require() with any library
      right away to include modules
    * More improvements in the editing HUD
    * Removed the 10/ library - some of the scripts are replaced in extra/
      using new APIs, some are not replaced yet
    * Removed the remains of deprecated scripts (except effects.lua which
      is still awaiting replacement)
    * A plugin system is now builtin in ents.register_class
    * The scripting modules now work with milliseconds instead of seconds
      everywhere (for example in entity run() methods and in actions)
    * Better user defined entity linking - you can now link an entity
      with multiple other ones
    * Smaller adjustments and lots of bug fixes

2013-06-03 - 0.2.2 beta 3

    * Reorganized entity structure inside the engine
    * Oriented markers now have pitch
    * Generic entity attaching system with visualization in the world
    * Automatic texture extension detection (for jpg, png)
    * Icon particle type and use that for entities in edit mode
    * Reworked editmode entity icons - they're now truly per-entity-type
      as in scripted entity type, they can also be colorized per-entity-type
    * Reworked some editing commands to use named attributes (e.g. entattr),
      this breaks some stdedit code that is still to be changed
    * Optimized scripted vec3/vec4 using native FFI structures instead of
      tables
    * New entity editing HUD displaying relevant properties instead of 5
      numbers
    * Removal of sauer types from the API (not relevant anymore)
    * World_Marker is now Oriented_Marker with yaw and pitch
    * Fixed dynamic and flickering light types (temporary)
    * Removed the getter/setter system from objects, instead methods get_attr
      and set_attr are used (more explicit and faster)
    * State variables are registered on per-class basis rather than per-entity,
      that means each state var is registered just once rather than N times
      (for N entities).
    * Selection grid helpers ported from Lamiae
    * GUI eval labels only execute the command once
    * Players can crouch now
    * Removed obsolete string utils
    * New table serializer and deserializer with more options, better safety
      and better performance
    * Replaced table.sort with a custom written introsort implementation
      (3x faster than the original)
    * Light entities can now be turned off by setting flags to -1
    * Pressed modifier check function for cubescript
    * Crouch height, time, jump velocity and gravity can now be adjusted
      per player (gravity has a global fallback)
    * All engine vars that had "colour" inside them had it replaced with
      "color" for consistency (watercolour -> watercolor)
    * Disabled string.dump
    * Initial support for per-mapscript environments - when finished, you'll
      be able to restart maps without problems

2013-05-20 - 0.2.1 beta 2

    * LuaJIT removed from the main makefile (build your own e.g. from OctaForge
      organization repository)
    * ENet cflags checker script
    * Revamped Make build system
    * Support for amalgamated builds
    * Forced check for 5.2 capabilities in LuaJIT
    * Initial support for CMake based builds
    * Bug fixes (entity tag handling, clearmodel...)
    * Complete Tesseract sync (breaks model yaw and other things)
    * Support for arbitrary roll, pitch and scale on mapmodels (contributed
      by Lee Salzman)
    * Lua strict mode enabled by default
    * Cubescript safe context
    * Removed the per-entity collision box stuff
    * Removed the deprecated triggering collision handler
    * Introduced signal based collision handlers for client-client and
      mapmodel-client
    * Initial support for obstacles - solid/non-solid invisible areas that
      trigger collision handlers (useful for area based triggering, temporary
      path blocking and other purposes)
    * Removed hardcoded sounds, removed id-based sound playing (not needed)
    * More physics handling externals - client-off-map, deadly materials,
      client state change (floor state, liquid state...)

2013-05-06 - 0.2.0 beta 1
